loadstring(game:HttpGet('https://pastebin.com/raw/WJ6Bg3zE'))()

-- [Legit Tab UI] ------------------------------------------------------------------------------------------------------------------------------------------------------------
local LegitTab = library:AddTab("Main"); 
local LegitColunm1 = LegitTab:AddColumn();
local LegitMain = LegitColunm1:AddSection("Autotiming")

LegitMain:AddDivider("Ping based autotime");
LegitMain:AddSlider({text = "Timing", min = 0, max = 300, float = 0.1, value = 80, callback = function(pingtiming)
	getgenv().Time = pingtiming
end});
LegitMain:AddButton({text = "Autotiming", callback = function()
	getgenv().ActivationKeybind = Enum.KeyCode.E
	
	
	loadstring(game:HttpGet("https://raw.githubusercontent.com/BootBandit/Rb-world-4/main/test", true))()
end});
LegitMain:AddDivider("old autotime");
LegitMain:AddSlider({text = "Shooting Timing", min = 0.10, max = 1, float = 0.01, value = 0.85, suffix = "째", callback = function(txt)
	selectedtime1 = (txt)
end});
LegitMain:AddBind({text = "Shooting keybind", flag = "Shooting", nomouse = true, key = "End", callback = function()
    time = (selectedtime1)
    
    local args = {
        [1] = "Shoot",
        [2] = true
    }
    
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    wait(time)
    
    local args = {
        [1] = "Shoot",
        [2] = false
    }
    
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
end});
LegitMain:AddSlider({text = "Lays Timing", min = 0.10, max = 1, float = 0.01, value = 0.75, suffix = "째", callback = function(txt)
	selectedtime2 = (txt)
end});
LegitMain:AddBind({text = "Lays keybind", flag = "Lays", nomouse = true, key = "End", callback = function()
    time = (selectedtime2)
    
    local args = {
        [1] = "Shoot",
        [2] = true
    }
    
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    wait(time)
    
    local args = {
        [1] = "Shoot",
        [2] = false
    }
    
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
end});
LegitMain:AddSlider({text = "Other Timing", min = 0.10, max = 1.5, float = 0.01, value = 0, suffix = "째", callback = function(txt)
	selectedtime3 = (txt)
end});
LegitMain:AddBind({text = "Other keybind", flag = "other", nomouse = true, key = "End", callback = function()
    time = (selectedtime3)
    
    local args = {
        [1] = "Shoot",
        [2] = true
    }
    
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
    wait(time)
    
    local args = {
        [1] = "Shoot",
        [2] = false
    }
    
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(unpack(args))
end});

local LegitSecond = LegitColunm1:AddSection("Other")
LegitSecond:AddSlider({text = "HandHitbox", min = 1, max = 6, float = 0.1, value = 1.13, suffix = "째", callback = function(s)
	game:GetService("Workspace")[game.Players.LocalPlayer.Name].RightHand.Size = Vector3.new(s, s, s)
    game:GetService("Workspace")[game.Players.LocalPlayer.Name].LeftHand.Size = Vector3.new(s, s, s)
end});
LegitSecond:AddBox({text = "Change name", skipflag = true, callback = function(value)
    for i,v in ipairs(game:GetService("Workspace").NameUIFolder:GetDescendants()) do
        if v:IsA("TextLabel") then
            v.Text = (value)
        end
    end
end});
LegitSecond:AddBox({text = "Fov", skipflag = true, callback = function(value)
	workspace.CurrentCamera.FieldOfView = (value)
end});

-- [Rage Tab UI] ------------------------------------------------------------------------------------------------------------------------------------------------------------
local RageTab = library:AddTab("Dribbles"); 
local RageColunm1 = RageTab:AddColumn();
local RageMain = RageColunm1:AddSection("Auto Wall")

RageMain:AddDivider("Main");
RageMain:AddBind({text = "Right Hesi Spin", flag = "dribble1", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
    local ohString2 = "CV"
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
    wait(.5)
    local ohString1 = "Dribble Move"
    local ohString2 = "CXZ"
    game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Left Hesi Spin", flag = "dribble2", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "ZV"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "ZXC"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Right Double Cross Spin", flag = "dribble3", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "CC"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "CXZ"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Left Double Cross Spin", flag = "dribble4", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "ZZ"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "ZXC"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Right Behind cross", flag = "dribble5", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "CX"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "C"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Left Behind cross", flag = "dribble6", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "ZX"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "Z"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Right cross between", flag = "dribble7", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "Z"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "VX"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Left cross between", flag = "dribble8", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "C"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "VX"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Right Double cross Snatch", flag = "dribble9", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "CC"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "XX"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});
RageMain:AddBind({text = "Left Double cross Snatch", flag = "dribble10", nomouse = true, key = "End", callback = function()
	local ohString1 = "Dribble Move"
	local ohString2 = "ZZ"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
	wait(.5)
	local ohString1 = "Dribble Move"
	local ohString2 = "XX"
	game:GetService("ReplicatedStorage").GameEvents.ClientAction:FireServer(ohString1, ohString2)
end});

-- [Visuals Tab UI] ------------------------------------------------------------------------------------------------------------------------------------------------------------
local VisualsTab = library:AddTab("Misc"); 
local VisualsColunm1 = VisualsTab:AddColumn();
local VisualsMain = VisualsColunm1:AddSection("Misc")

VisualsMain:AddDivider("Main");
VisualsMain:AddButton({text = "Fps Boost", callback = function()
    if game:GetService("Workspace"):FindFirstChild("Arena") then
        game:GetService("Workspace").Arena:Destroy()
    else
	for i,v in pairs(game:GetService("Workspace").Gym.Building:GetChildren()) do if v:IsA("Model") then v:Destroy()
	end
	end
end
		game:GetService("Lighting").Brightness = 2
		game:GetService("Lighting").ClockTime = 14
		game:GetService("Lighting").FogEnd = 100000
		game:GetService("Lighting").GlobalShadows = false
		game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
end});
VisualsMain:AddButton({text = "Server hop", callback = function()
    local x = {}
	for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
	if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
	x[#x + 1] = v.id
	end
	end
	if #x > 0 then
	game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
	else
	return notify("Serverhop","Couldn't find a server.")
	end
end});

-- [Library Settings UI] -----------------------------------------------------------------------------------------------------------------------------------------------------
local SettingsTab = library:AddTab("Settings"); 
local SettingsColumn = SettingsTab:AddColumn(); 
local SettingsColumn2 = SettingsTab:AddColumn(); 
local SettingSection = SettingsColumn:AddSection("Menu"); 
local ConfigSection = SettingsColumn2:AddSection("Configs");
local Warning = library:AddWarning({type = "confirm"});

SettingSection:AddBind({text = "Open / Close", flag = "UI Toggle", nomouse = true, key = "End", callback = function()
    library:Close();
end});

SettingSection:AddColor({text = "Accent Color", flag = "Menu Accent Color", color = Color3.new(0.599623620510101318359375, 0.447115242481231689453125, 0.97174417972564697265625), callback = function(color)
    if library.currentTab then
        library.currentTab.button.TextColor3 = color;
    end
    for i,v in pairs(library.theme) do
        v[(v.ClassName == "TextLabel" and "TextColor3") or (v.ClassName == "ImageLabel" and "ImageColor3") or "BackgroundColor3"] = color;
    end
end});

-- [Background List]
local backgroundlist = {
    Floral = "rbxassetid://5553946656",
    Flowers = "rbxassetid://6071575925",
    Circles = "rbxassetid://6071579801",
    Hearts = "rbxassetid://6073763717"
};

-- [Background List]
local back = SettingSection:AddList({text = "Background", max = 4, flag = "background", values = {"Floral", "Flowers", "Circles", "Hearts"}, value = "Floral", callback = function(v)
    if library.main then
        library.main.Image = backgroundlist[v];
    end
end});

-- [Background Color Picker]
back:AddColor({flag = "backgroundcolor", color = Color3.new(), callback = function(color)
    if library.main then
        library.main.ImageColor3 = color;
    end
end, trans = 1, calltrans = function(trans)
    if library.main then
        library.main.ImageTransparency = 1 - trans;
    end
end});

-- [Tile Size Slider]
SettingSection:AddSlider({text = "Tile Size", min = 50, max = 500, value = 50, callback = function(size)
    if library.main then
        library.main.TileSize = UDim2.new(0, size, 0, size);
    end
end});

-- [Discord Button]
SettingSection:AddButton({text = "Copy discord invite", callback = function()
	setclipboard("https://discord.gg/rZwYMJnSau")
end});

SettingSection:AddButton({text = "made by BigBootyBandit#3102", callback = function()
	setclipboard("BigBootyBandit#3102")
end});

-- [Config Box]
ConfigSection:AddBox({text = "Config Name", skipflag = true});

-- [Config List]
ConfigSection:AddList({text = "Configs", skipflag = true, value = "", flag = "Config List", values = library:GetConfigs()});

-- [Create Button]
ConfigSection:AddButton({text = "Create", callback = function()
    library:GetConfigs();
    writefile(library.foldername .. "/" .. library.flags["Config Name"] .. library.fileext, "{}");
    library.options["Config List"]:AddValue(library.flags["Config Name"]);
end});

-- [Save Button]
ConfigSection:AddButton({text = "Save", callback = function()
    local r, g, b = library.round(library.flags["Menu Accent Color"]);
    Warning.text = "Are you sure you want to save the current settings to config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?";
    if Warning:Show() then
        library:SaveConfig(library.flags["Config List"]);
    end
end});

-- [Load Button]
ConfigSection:AddButton({text = "Load", callback = function()
    local r, g, b = library.round(library.flags["Menu Accent Color"]);
    Warning.text = "Are you sure you want to load config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?";
    if Warning:Show() then
        library:LoadConfig(library.flags["Config List"]);
    end
end});

-- [Delete Button]
ConfigSection:AddButton({text = "Delete", callback = function()
    local r, g, b = library.round(library.flags["Menu Accent Color"]);
    Warning.text = "Are you sure you want to delete config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?";
    if Warning:Show() then
        local config = library.flags["Config List"];
        if table.find(library:GetConfigs(), config) and isfile(library.foldername .. "/" .. config .. library.fileext) then
            library.options["Config List"]:RemoveValue(config);
            delfile(library.foldername .. "/" .. config .. library.fileext);
        end
    end
end});

-- [Init] --------------------------------------------------------------------------------------------------------------------------------------------------------------------
library:Init();
library:selectTab(library.tabs[1]);
